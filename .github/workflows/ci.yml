name: Cling CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:

        include:
          - name: ubuntu-16.04-gcc-4.8-compile
            os: ubuntu-16.04
            compiler: gcc
            version: "4.8"

          - name: ubuntu-16.04-gcc-5
            os: ubuntu-16.04
            compiler: gcc
            version: "5"

          - name: ubuntu-16.04-gcc-6
            os: ubuntu-16.04
            compiler: gcc
            version: "6"

          - name: ubuntu-16.04-gcc-7
            os: ubuntu-16.04
            compiler: gcc
            version: "7"

          - name: ubuntu-16.04-gcc-7-compile
            os: ubuntu-16.04
            compiler: gcc
            version: "7"

          - name: ubuntu-16.04-gcc-7-notar
            os: ubuntu-16.04
            compiler: gcc
            version: "7"

          - name: ubuntu-16.04-clang-3.9
            os: ubuntu-16.04
            compiler: clang
            version: "3.9"

          - name: ubuntu-16.04-clang-6
            os: ubuntu-16.04
            compiler: clang
            version: "6.0"

          - name: ubuntu-16.04-clang-6-compile
            os: ubuntu-16.04
            compiler: clang
            version: "6.0"

          - name: ubuntu-18.04-gcc-7-notar
            os: ubuntu-18.04
            compiler: gcc
            version: "7"

          - name: ubuntu-18.04-gcc-7-compile
            os: ubuntu-18.04
            compiler: gcc
            version: "7"

          - name: ubuntu-18.04-clang-7-notar
            os: ubuntu-18.04
            compiler: clang
            version: "7"

          - name: macos-xcode-11.2.1
            os: macOS-latest
            compiler: clang
            xcode-version: "11.2.1"

          - name: macos-xcode-11.2.1-compile
            os: macOS-latest
            compiler: clang
            xcode-version: "11.2.1"

      #    - name: macos-xcode-11.2.1-notar
      #      os: macOS-latest
      #      compiler: clang
      #      xcode-version: "11.2.1"

          - name: macos-gcc-9-compile
            os: macOS-latest
            compiler: gcc
            version: "9"

          - name: ubuntu-20.04-clang-7-compile
            os: ubuntu-20.04
            compiler: clang
            version: "7"

          - name: ubuntu-20.04-gcc-7-compile
            os: ubuntu-20.04
            compiler: gcc
            version: "7"

          - name: windows-2019-ninja
            os: windows-2019
            generator: Ninja

          - name: windows-2019-visual-studio
            os: windows-2019
            generator: Visual Studio 16 2019

    steps:
    - uses: actions/checkout@v2
    - name: Setup compiler on Linux
      run: |
        sudo apt-get update
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y gcc-${{ matrix.version }} g++-${{ matrix.version }}
          echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
        else
          sudo apt-get install -y clang-${{ matrix.version }}
          echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
        fi
      if: runner.os == 'Linux'
      shell: bash
    - name: Setup compiler on OS X
      run: |
        curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci; source ./macports-ci install
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          brew install gcc@${{ matrix.version }}
          echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
        else
          sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode-version }}.app
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        fi
      if: runner.os == 'macOS'
    - name: Setup ninja for Windows
      uses: seanmiddleditch/gha-setup-ninja@master
      if: runner.os == 'Windows' && matrix.generator == 'Ninja'
    - name: Execute cpt on Linux/OS X
      run: |
        if [[ "${{ matrix.compiler }}" = "gcc" && "${{ matrix.version }}" = "7" ]]; then
          export CLING_BUILD_FLAGS="-DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=ON"
          if [ "${{ matrix.os }}" != "macOS-latest" ]; then
            export CLING_BUILD_FLAGS="$CLING_BUILD_FLAGS -DCXX_EXTENSIONS=OFF"
          fi
        fi
        export CLING_BUILD_FLAGS="$CLING_BUILD_FLAGS -DCLANG_ENABLE_ARCMT=OFF -DCLANG_ENABLE_STATIC_ANALYZER=OFF -DLLVM_ENABLE_WARNINGS=OFF -DCLING_ENABLE_WARNINGS=ON"
        if [[ ${{ matrix.name }} == *"compile"* ]]; then
          ./cpt.py -y --check-requirements --current-dev=tar --with-cmake-flags="$CLING_BUILD_FLAGS" --with-cling-url=https://github.com/$GITHUB_REPOSITORY --cling-branch=${{ github.head_ref }}
        elif [[ ${{ matrix.name }} == *"notar"* ]]; then
          ./cpt.py -y --check-requirements --current-dev=tar --with-cmake-flags="$CLING_BUILD_FLAGS" --with-cling-url=https://github.com/$GITHUB_REPOSITORY --cling-branch=${{ github.head_ref }} --with-binary-llvm
        else
          ./cpt.py -y --check-requirements --current-dev=tar --with-cmake-flags="$CLING_BUILD_FLAGS" --with-cling-url=https://github.com/$GITHUB_REPOSITORY --cling-branch=${{ github.head_ref }} --with-binary-llvm --with-llvm-tar
        fi
      working-directory: tools/packaging/
      if: runner.os != 'Windows'
    - name: Start SSH session
      uses: luchihoratiu/debug-via-ssh@main
      with:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        SSH_PASS: ${{ secrets.SSH_PASS }}
    - name: Execute cpt on Windows
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\vc\Auxiliary\build\vcvarsall.bat" x64
        C:\hostedtoolcache\windows\Python\3.7.9\x64\python.exe cpt.py --current-dev=tar --with-cmake-flags="-DLLVM_OPTIMIZED_TABLEGEN=ON -DCLING_BUILD_PLUGINS=Off -DCMAKE_C_COMPILER=\"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.27.29110\bin\Hostx64\x64\cl.exe\" -DCMAKE_CXX_COMPILER=\"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.27.29110\bin\Hostx64\x64\cl.exe\" -G \"${{ matrix.generator}}\"" --with-cling-url=https://github.com/%GITHUB_REPOSITORY% --cling-branch=${{ github.head_ref }} --skip-cleanup
      working-directory: tools\packaging\
      shell: cmd
      if: runner.os == 'Windows'
